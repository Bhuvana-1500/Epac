name: Sync and Deploy Terraform Configuration

on:
  push:
    paths:
      - 'epac.tf'  # Trigger workflow on any Terraform file change

jobs:
  sync-upload-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Azure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Extract Azure Credentials
        id: extract-creds
        run: |
          CLIENT_ID=$(awk -F' *= *' '/client_id/ {print $2}' epac.tf | tr -d '"')
          CLIENT_SECRET=$(awk -F' *= *' '/client_secret/ {print $2}' epac.tf | tr -d '"')
          TENANT_ID=$(awk -F' *= *' '/tenant_id/ {print $2}' epac.tf | tr -d '"')
          echo "client_id=$CLIENT_ID" >> $GITHUB_ENV
          echo "client_secret=$CLIENT_SECRET" >> $GITHUB_ENV
          echo "tenant_id=$TENANT_ID" >> $GITHUB_ENV

      - name: Log in to Azure CLI
        run: az login --service-principal -u ${{ env.client_id }} -p ${{ env.client_secret }} --tenant ${{ env.tenant_id }}

      - name: Upload Terraform Files to Azure Storage
        run: |
          az storage blob upload-batch --account-name strepac --destination conepac --source . --pattern "*.tf" --overwrite --auth-mode login
        env:
          AZURE_STORAGE_ACCOUNT: "strepac"

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Initialize Terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=rg-web-eus" \
            -backend-config="storage_account_name=strepac" \
            -backend-config="container_name=conepac" \
            -backend-config="key=terraform.tfstate"

      - name: Remove Local Terraform State File (if exists)
        run: rm -f terraform.tfstate || true

      - name: Apply Terraform Configuration
        env:
          TF_VAR_tenant_id: ${{ env.tenant_id }}
          TF_VAR_client_id: ${{ env.client_id }}
          TF_VAR_client_secret: ${{ env.client_secret }}
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: terraform apply -auto-approve
