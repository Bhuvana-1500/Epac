name: Sync and Deploy Terraform Configuration

on:
  push:
    paths:
      - 'epac.tf'  # Trigger workflow when Terraform file changes

jobs:
  sync-upload-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Azure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Extract Azure Credentials
        id: extract-creds
        run: |
          CLIENT_ID=$(awk -F' *= *' '/client_id/ {print $2}' epac.tf | tr -d '"')
          CLIENT_SECRET=$(awk -F' *= *' '/client_secret/ {print $2}' epac.tf | tr -d '"')
          TENANT_ID=$(awk -F' *= *' '/tenant_id/ {print $2}' epac.tf | tr -d '"')
          SUBSCRIPTION_ID=$(awk -F' *= *' '/subscription_id/ {print $2}' epac.tf | tr -d '"')

           # Securely store them as environment variables
          echo "ARM_CLIENT_ID=$CLIENT_ID" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$CLIENT_SECRET" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$TENANT_ID" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$SUBSCRIPTION_ID" >> $GITHUB_ENV

      - name: Log in to Azure CLI
        run: |
          az login --service-principal -u $CLIENT_ID -p="$CLIENT_SECRET" --tenant $TENANT_ID

      - name: Upload Terraform Files to Azure Storage
        run: |
          az storage blob upload-batch --account-name strepac --destination conepac --source . --pattern "*.tf" --overwrite --auth-mode login

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      - name: Set Azure Authentication Environment Variables
        run: |
          export ARM_CLIENT_ID=$(awk -F' *= *' '/client_id/ {print $2}' terraform/main.tf | tr -d '"')
          export ARM_CLIENT_SECRET=$(awk -F' *= *' '/client_secret/ {print $2}' terraform/main.tf | tr -d '"')
          export ARM_SUBSCRIPTION_ID=$(awk -F' *= *' '/subscription_id/ {print $2}' terraform/main.tf | tr -d '"')
          export ARM_TENANT_ID=$(awk -F' *= *' '/tenant_id/ {print $2}' terraform/main.tf | tr -d '"')

      - name: Initialize Terraform
        run: terraform init



      - name: Remove Local Terraform State File (if exists)
        run: rm -f terraform.tfstate

      - name: Apply Terraform Configuration
        run: terraform apply -auto-approve
